// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace behaviour.KANBAN
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PersistedBoardFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "PersistedBoard.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PersistedBoard", "\tIn order to persist work progress\r\n\tAs a project manager\r\n\tI want to save and lo" +
                    "ad board state on disk", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PersistedBoard")))
            {
                global::behaviour.KANBAN.PersistedBoardFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Board is saved on disk")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PersistedBoard")]
        public virtual void BoardIsSavedOnDisk()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Board is saved on disk", null, ((string[])(null)));
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("closed list has \'Chatbot\' task with impact 4 ease 1 confidence 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("closed list has \'Dashboard\' task with impact 8 ease 7 confidence 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("closed list has \'Mobile\' task with impact 4 ease 3 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("closed WIP is 8", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("resolved list has \'AI for chatbot\' task with impact 9 ease 1 confidence 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("resolved list has \'Design for dashboard\' task with impact 2 ease 5 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("resolved WIP is 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("in work list has \'Mobile auth\' task with impact 9 ease 1 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("in work list has \'Mobile swipe history\' task with impact 5 ease 2 confidence 7", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("in work WIP is 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("todo list has \'Chatbot Telegram channel\' task with impact 1 ease 3 confidence 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("todo WIP is 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("backlog has \'Chatbot Skype channel\' task with impact 2 ease 2 confidence 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("backlog has \'Chatbot WhatsApp channel\' task with impact 9 ease 2 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("backlog has \'Chatbot Facebook channel\' task with impact 7 ease 2 confidence 7", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("backlog has \'Dashboard KPI graph\' task with impact 9 ease 2 confidence 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("backlog has \'Dashboard PM graph\' task with impact 4 ease 2 confidence 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.When("I save board to tmp file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then(@"tmp file contains '{""Backlog"":[{""Confidence"":2,""Ease"":2,""Impact"":2,""Name"":""Chatbot Skype channel""},{""Confidence"":9,""Ease"":2,""Impact"":9,""Name"":""Chatbot WhatsApp channel""},{""Confidence"":7,""Ease"":2,""Impact"":7,""Name"":""Chatbot Facebook channel""},{""Confidence"":4,""Ease"":2,""Impact"":9,""Name"":""Dashboard KPI graph""},{""Confidence"":4,""Ease"":2,""Impact"":4,""Name"":""Dashboard PM graph""}],""Todo"":[{""Confidence"":1,""Ease"":3,""Impact"":1,""Name"":""Chatbot Telegram channel""}],""InWork"":[{""Confidence"":9,""Ease"":1,""Impact"":9,""Name"":""Mobile auth""},{""Confidence"":7,""Ease"":2,""Impact"":5,""Name"":""Mobile swipe history""}],""Resolved"":[{""Confidence"":1,""Ease"":1,""Impact"":9,""Name"":""AI for chatbot""},{""Confidence"":9,""Ease"":5,""Impact"":2,""Name"":""Design for dashboard""}],""Closed"":[{""Confidence"":2,""Ease"":1,""Impact"":4,""Name"":""Chatbot""},{""Confidence"":5,""Ease"":7,""Impact"":8,""Name"":""Dashboard""},{""Confidence"":9,""Ease"":3,""Impact"":4,""Name"":""Mobile""}],""TodoWIP"":5,""InWorkWIP"":5,""ResolvedWIP"":5,""ClosedWIP"":8}'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Board is loaded from disk")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PersistedBoard")]
        public virtual void BoardIsLoadedFromDisk()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Board is loaded from disk", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 28
 testRunner.Given("board doesnt exist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And(@"tmp file exists having '{""Backlog"":[{""Confidence"":2,""Ease"":2,""Impact"":2,""Name"":""Chatbot Skype channel""},{""Confidence"":9,""Ease"":2,""Impact"":9,""Name"":""Chatbot WhatsApp channel""},{""Confidence"":7,""Ease"":2,""Impact"":7,""Name"":""Chatbot Facebook channel""},{""Confidence"":4,""Ease"":2,""Impact"":9,""Name"":""Dashboard KPI graph""},{""Confidence"":4,""Ease"":2,""Impact"":4,""Name"":""Dashboard PM graph""}],""Todo"":[{""Confidence"":1,""Ease"":3,""Impact"":1,""Name"":""Chatbot Telegram channel""}],""InWork"":[{""Confidence"":9,""Ease"":1,""Impact"":9,""Name"":""Mobile auth""},{""Confidence"":7,""Ease"":2,""Impact"":5,""Name"":""Mobile swipe history""}],""Resolved"":[{""Confidence"":1,""Ease"":1,""Impact"":9,""Name"":""AI for chatbot""},{""Confidence"":9,""Ease"":5,""Impact"":2,""Name"":""Design for dashboard""}],""Closed"":[{""Confidence"":2,""Ease"":1,""Impact"":4,""Name"":""Chatbot""},{""Confidence"":5,""Ease"":7,""Impact"":8,""Name"":""Dashboard""},{""Confidence"":9,""Ease"":3,""Impact"":4,""Name"":""Mobile""}],""TodoWIP"":5,""InWorkWIP"":5,""ResolvedWIP"":5,""ClosedWIP"":8}'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("tmp file is loaded to board", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("board exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.And("closed list has \'Chatbot\' task with impact 4 ease 1 confidence 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("closed list has \'Dashboard\' task with impact 8 ease 7 confidence 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("closed list has \'Mobile\' task with impact 4 ease 3 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("closed WIP is 8", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("resolved list has \'AI for chatbot\' task with impact 9 ease 1 confidence 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("resolved list has \'Design for dashboard\' task with impact 2 ease 5 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("resolved WIP is 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("in work list has \'Mobile auth\' task with impact 9 ease 1 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("in work list has \'Mobile swipe history\' task with impact 5 ease 2 confidence 7", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("in work WIP is 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("todo list has \'Chatbot Telegram channel\' task with impact 1 ease 3 confidence 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("todo WIP is 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("backlog has \'Chatbot Skype channel\' task with impact 2 ease 2 confidence 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("backlog has \'Chatbot WhatsApp channel\' task with impact 9 ease 2 confidence 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("backlog has \'Chatbot Facebook channel\' task with impact 7 ease 2 confidence 7", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("backlog has \'Dashboard KPI graph\' task with impact 9 ease 2 confidence 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("backlog has \'Dashboard PM graph\' task with impact 4 ease 2 confidence 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
